@inherits LayoutView
@using MudBlazor
@using BizCore.Web.Components.Layout
@using BizCore.Web.Services

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudText Typo="Typo.h6">BizCore ERP</MudText>
        <MudSpacer />
        <MudButton Variant="Variant.Text" Color="Color.Inherit" StartIcon="@Icons.Material.Filled.Brightness4" OnClick="@((e) => DarkModeToggle())">
            @if (_isDarkMode)
            {
                <text>Light Mode</text>
            }
            else
            {
                <text>Dark Mode</text>
            }
        </MudButton>
        <MudButton Variant="Variant.Text" Color="Color.Inherit" StartIcon="@Icons.Material.Filled.AccountCircle">
            @_currentUser?.Name
        </MudButton>
        <MudButton Variant="Variant.Text" Color="Color.Inherit" StartIcon="@Icons.Material.Filled.Logout" OnClick="@Logout">
            Logout
        </MudButton>
    </MudAppBar>
    
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="pa-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private MudThemeProvider _mudThemeProvider = default!;
    private UserInfo? _currentUser;

    [Inject] private IUserService UserService { get; set; } = default!;
    [Inject] private NavigationManager Navigation { get; set; } = default!;
    [Inject] private ISnackbar Snackbar { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _currentUser = await UserService.GetCurrentUserAsync();
        _isDarkMode = await UserService.GetDarkModePreferenceAsync();
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
        await UserService.SetDarkModePreferenceAsync(_isDarkMode);
    }

    private async Task Logout()
    {
        await UserService.LogoutAsync();
        Navigation.NavigateTo("/login");
        Snackbar.Add("Logged out successfully", Severity.Success);
    }
}